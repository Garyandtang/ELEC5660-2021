
VERSION 1.2.4
  - Bugs fixed for MSVC2010
VERSION 1.2.3
  
  - Changes in boardconfiguration and boardetector to allow arbitrary located markers. No API changes involved, except for the config files that have changed their format.
  - Changes in arucofidmarkers to allow the creation of chessboard like boards  (FiducidalMarkers::createBoardImage_ChessBoard).
          Added the corresponding change in aruco_create_board to support such feature
  - Added experimental code for removing the deformation that occurs when a marker is in a cylinder
  - Added the corner refinement method LINES. It is based on intersecting the lines of the marker's sides using the contour points. 
    We believe this is the best refinement method of the library so far.
  - Added functionality in aruco::BoarDetector to perform the whole detection process in it if desired
  - Changed aruco_test_board to use the new functionality described above
  - Changed old way of obtaining extrinsics FindExtrinsicParam2 for the new one solvePnp in BoardDetector and in Marker


 
VERSION 1.1.0
  - Ogre integration (    Board::OgreGetPoseParameters and Marker::OgreGetPoseParameters).
  - Changes to make it compile with MSVC 2010
  - Remove getopt.h dependency. Command line are simpler now
  - MarkerDetector: Externalization of the marker detector to allow using user-defined markers. The function setMakerDetectorFunction allows to define this function
  - Added class FiducidalMarkers to detect the original aruco markers 
  - MarkerDetector: function glGetProjectionMatrix is moved to the CameraParameters class. Sorry, but it is more logical.
  - MarkerDetector: Clear separation between the detection phases into separated functions that can be externally called (thresHold and detectRectangles) for more sohpisticated user needs
  - MarkerDetector: new corner refinement method based on harris detector. Also, added the possibility of not refining corners at all.
  - Added an option to work on a reduced version of the images (pyrDown).
  - Changes the adaptive threshold method. Now we employ the MEAN. As a consequence, the process is faster and do not depen on the window size.
  - Initial tests with android
  - Bugs fixed
VERSION 1.0.0
  -  New names for the main classes Marker,MarkerDector... etc. Sorry, but I needed to clear up things. It wont be difficult to adapt.
  -  A new class for the camera parameters. It can be readed from the calibration.cpp application in OpenCv2.2
  -  Refactorization of code to make it more maintainable
  -  Better support for Windows (Cmake) and OpenGL
  -  Improved documentation. Windows users should read the README file that explains how to build the library
  -  A new class for drawing markers and boards in opencv images
  -  A couple of new very simple examples to teach the use of the library(aruco_simple and aruco_simple_board)
VERSION 0.9.5
  Added support for Boards
  Added cmake support
  Bugs fixed